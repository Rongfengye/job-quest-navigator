
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://qrpppkxwvmngepzznorf.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InFycHBwa3h3dm1uZ2Vwenpub3JmIiwicm9sZSI6ImFub24iLCJpYXQiOjE3Mzk3NDgzODgsImV4cCI6MjA1NTMyNDM4OH0.z646GEKp6AvsS1wM5TedsWdPYmuAaZOpINekvjktW1c";
const SITE_URL = "https://storyline.tryhireme.com";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

// Create client with explicit auth configuration
export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY, {
  auth: {
    storage: localStorage,
    persistSession: true,
    autoRefreshToken: true,
    detectSessionInUrl: true,
    storageKey: 'storyline-auth-token',
    flowType: 'pkce',
    // Add additional configuration for better OAuth handling
    debug: process.env.NODE_ENV === 'development'
  }
});

// Export a debug function to help troubleshoot auth issues
export const debugSupabaseAuth = async () => {
  try {
    const { data, error } = await supabase.auth.getSession();
    const user = data.session?.user;
    
    return {
      hasSession: !!data.session,
      sessionError: error,
      storageAvailable: {
        localStorage: typeof localStorage !== 'undefined',
        sessionStorage: typeof sessionStorage !== 'undefined',
        cookiesEnabled: navigator?.cookieEnabled
      },
      sessionData: data.session ? {
        expires_at: data.session.expires_at,
        user_id: data.session.user.id,
        email: data.session.user.email,
        provider: data.session.user.app_metadata?.provider,
        user_metadata: data.session.user.user_metadata,
        app_metadata: data.session.user.app_metadata
      } : null,
      // Add more detailed provider information
      providerInfo: user ? {
        provider: user.app_metadata?.provider,
        identities: user.app_metadata?.identities,
        user_metadata: user.user_metadata,
        email_confirmed_at: user.email_confirmed_at,
        phone_confirmed_at: user.phone_confirmed_at,
        last_sign_in_at: user.last_sign_in_at
      } : null
    };
  } catch (e) {
    return { error: e };
  }
};
