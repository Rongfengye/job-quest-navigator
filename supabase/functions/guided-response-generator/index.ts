
import { serve } from "https://deno.land/std@0.168.0/http/server.ts";

const corsHeaders = {
  'Access-Control-Allow-Origin': '*',
  'Access-Control-Allow-Headers': 'authorization, x-client-info, apikey, content-type',
};

serve(async (req) => {
  // Handle CORS preflight requests
  if (req.method === 'OPTIONS') {
    return new Response(null, { headers: corsHeaders });
  }

  try {
    // Parse the request body
    const { questionIndex, questionType, questionText } = await req.json();
    
    console.log(`Generating guided response for question #${questionIndex} (${questionType}): ${questionText}`);
    
    // Return a structured response with guidance sections
    const response = {
      success: true,
      answer: "This is a placeholder answer generated by the guided response tool.",
      guidance: {
        keyPoints: [
          "Start with a concise summary of your main point",
          "Include relevant experience or examples",
          "Address the specific question directly",
          "End with a forward-looking statement"
        ],
        structure: "When answering this question, consider using the STAR method: Situation, Task, Action, Result.",
        suggestions: [
          "Consider mentioning specific metrics or outcomes",
          "Try to relate your answer to the job requirements",
          "Keep your response under 2 minutes when spoken"
        ]
      }
    };

    return new Response(
      JSON.stringify(response),
      { 
        headers: { 
          ...corsHeaders,
          'Content-Type': 'application/json' 
        } 
      }
    );
  } catch (error) {
    console.error("Error generating guided response:", error);
    
    return new Response(
      JSON.stringify({ 
        error: error.message, 
        success: false 
      }),
      { 
        status: 500, 
        headers: { 
          ...corsHeaders,
          'Content-Type': 'application/json' 
        } 
      }
    );
  }
});
